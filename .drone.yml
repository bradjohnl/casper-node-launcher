---
kind: pipeline
type: docker
name: main-pipeline

steps:
  - name: cargo-fmt
    image: casperlabs/casper-node-launcher-build
    commands:
      - rustup update stable
      - cargo fmt -- --check

  - name: cargo-clippy
    image: casperlabs/casper-node-launcher-build
    commands:
      - cargo clippy -- --deny warnings

  - name: cargo-audit
    image: casperlabs/casper-node-launcher-build
    commands:
      - cargo audit --deny warnings

  - name: test
    image: casperlabs/casper-node-launcher-build
    commands:
      - cargo test

  - name: build-deb
    image: casperlabs/casper-node-launcher-build
    commands:
      - cargo deb

  - name: build-docker
    image: docker:stable
    commands:
      - apk add git bash
      - ./ci/build_docker.sh
    volumes:
      - name: docker_sock
        path: /var/run/docker.sock

volumes:
  - name: docker_sock
    host:
      path: /var/run/docker.sock

trigger:
  branch:
    - main
    - trying
    - staging
    - "release-*"
  event:
    exclude:
      - tag

---
kind: pipeline
type: docker
name: failed-main

clone:
  disable: true

steps:
  - name: notify
    image: plugins/slack
    settings:
      webhook:
        from_secret: slack_webhook
      template:
        - |
          casper-node-launcher build status: *{{ uppercasefirst build.status }}*
          Author: {{ build.author }}
          Drone Build: <{{ build.link }}|#{{ build.number }}>
          Commit Link: <https://github.com/{{repo.owner}}/{{repo.name}}/commit/{{build.commit}}|{{ truncate build.commit 10 }}>
trigger:
  status:
    - failure
  branch:
    - main
    - trying
    - staging
    - "release-*"
  event:
    exclude:
      - tag

depends_on:
  - main-pipeline
---
kind: pipeline
type: docker
name: release-by-tag

steps:
  - name: build-deb
    image: casperlabs/casper-node-launcher-build
    commands:
      - cargo deb

  - name: publish-bintray
    image: casperlabs/casper-node-launcher-build
    commands:
      - "./upload_to_bintray.sh --repo-name debian --package-name casper-node-launcher --package-tag true"
    environment:
      CL_VAULT_TOKEN:
        from_secret: vault_token
      CL_VAULT_HOST:
        from_secret: vault_host

  - name: publish-repo-prod
    image: casperlabs/aptly:latest
    failure: ignore
    environment:
      AWS_SECRET_ACCESS_KEY:
        from_secret: aptly_prod_secret_key
      AWS_ACCESS_KEY_ID:
        from_secret: aptly_prod_key_id
    settings:
      repo_name:
        from_secret: aptly_prod_repo
      region:
        from_secret: aptly_prod_region
      gpg_key:
        from_secret: aptly_prod_gpg_key
      gpg_pass:
        from_secret: aptly_prod_gpg_pass
      distribution_id:
        from_secret: aptly_prod_dist_id
      acl: 'public-read'
      prefix: 'releases'
      deb_path: './target/debian'
      deb_name: '*.deb'

  - name: build-docker
    image: docker:stable
    commands:
      - apk add git bash
      - ./ci/build_docker.sh
    volumes:
      - name: docker_sock
        path: /var/run/docker.sock

  - name: push-docker
    image: docker:stable
    commands:
      - apk add git bash
      - ./ci/push_docker.sh
    volumes:
      - name: docker_sock
        path: /var/run/docker.sock
    environment:
      DOCKER_USERNAME:
        from_secret: docker_username
      DOCKER_PASSWORD:
        from_secret: docker_password

volumes:
  - name: docker_sock
    host:
      path: /var/run/docker.sock

trigger:
  ref:
    - refs/tags/v*
---
kind: pipeline
type: docker
name: failed-publish

clone:
  disable: true

steps:
  - name: notify
    image: plugins/slack
    settings:
      webhook:
        from_secret: slack_webhook
      template:
        - |
          casper-node-launcher build status: *{{ uppercasefirst build.status }}*
          Author: {{ build.author }}
          Drone Build: <{{ build.link }}|#{{ build.number }}>
          Commit Link: <https://github.com/{{repo.owner}}/{{repo.name}}/commit/{{build.commit}}|{{ truncate build.commit 10 }}>
trigger:
  status:
    - failure
  ref:
    - refs/tags/v*

depends_on:
  - release-by-tag
